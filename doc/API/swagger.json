{
  "openapi": "3.0.1",
  "info": {
    "title": "PfotenFreunde.Api",
    "version": "v1"
  },
  "paths": {
    "/Chatroom/{id}": {
      "get": {
        "tags": [
          "Chatroom"
        ],
        "summary": "Get information of the specified chatroom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the chatroom",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id of the chatroom",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Chatroom"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Chatroom"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Chatroom"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/Chatroom": {
      "post": {
        "tags": [
          "Chatroom"
        ],
        "summary": "Creates a new Chatroom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Chatroom"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Chatroom"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Chatroom"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "patch": {
        "tags": [
          "Chatroom"
        ],
        "summary": "Updates information of a chatroom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Chatroom"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Chatroom"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Chatroom"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/Chatroom/{id}/messages": {
      "post": {
        "tags": [
          "Chatroom"
        ],
        "summary": "Adds a new message to the chatroom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/Chronicle/{id}": {
      "get": {
        "tags": [
          "Chronicle"
        ],
        "summary": "Gets information of the chronicle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Chronicle"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Chronicle"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Chronicle"
                }
              }
            }
          }
        }
      }
    },
    "/Chronicle/{id}/post": {
      "post": {
        "tags": [
          "Chronicle"
        ],
        "summary": "Adds a new post to the chronicle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/Friendship/{userId}": {
      "get": {
        "tags": [
          "Friendship"
        ],
        "summary": "Retrieves friend list of user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FriendList"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FriendList"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FriendList"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Friendship"
        ],
        "summary": "Sends a friend request to the specified user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "User is already befriended"
          }
        }
      },
      "delete": {
        "tags": [
          "Friendship"
        ],
        "summary": "Removes a friendship",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "User is not befriended"
          }
        }
      }
    },
    "/Institution": {
      "get": {
        "tags": [
          "Institution"
        ],
        "summary": "Gets information about the institution",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Institution"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Institution"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Institution"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Institution"
        ],
        "summary": "Creates a new institution",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Institution"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Institution"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Institution"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/Institution/{id}": {
      "patch": {
        "tags": [
          "Institution"
        ],
        "summary": "Updates information of an institution",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Institution"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Institution"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Institution"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/Login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Creates a new login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Login"
        ],
        "summary": "Removes a login and its associated data (User, Pets, ...)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Me": {
      "get": {
        "tags": [
          "Me"
        ],
        "summary": "Returns information about the current session user",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Me"
                }
              }
            }
          }
        }
      }
    },
    "/Person/{id}": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Gets information about the specified person",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Person"
        ],
        "summary": "Updates information of the specified person",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/Person": {
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Adds a new person",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Person/{id}/Pets": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Gets the list of pets of the specified person",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Pet/{id}": {
      "get": {
        "tags": [
          "Pet"
        ],
        "summary": "Gets information about the specified pet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Pet"
        ],
        "summary": "Updates information about the specified pet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Pet"
        ],
        "summary": "Deletes the specified pet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "404": {
            "description": "Pet does not exist"
          }
        }
      }
    },
    "/Pet": {
      "post": {
        "tags": [
          "Pet"
        ],
        "summary": "Adds a new pet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Reports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Gets all open reports",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Report"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Report"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Report"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          }
        }
      }
    },
    "/Reports/{id}": {
      "delete": {
        "tags": [
          "Reports"
        ],
        "summary": "Deletes a report",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Search/user": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Searches for a user",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Search/pet": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Searches for a pet",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Session": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "Creates a new session",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          }
        }
      }
    },
    "/Session/{id}": {
      "delete": {
        "tags": [
          "Session"
        ],
        "summary": "Deletes the specified session",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Session does not exist"
          }
        }
      }
    },
    "/User": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets all users",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets the specified user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Deletes the specified user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "404": {
            "description": "User does not exist"
          }
        }
      }
    },
    "/User/{id}/pause": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Pauses the subscription of the specified user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "404": {
            "description": "User does not exist"
          }
        }
      }
    },
    "/User/{id}/report": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Reports the specified user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Report"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Report"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Report"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User does not exist"
          }
        }
      }
    },
    "/User/{id}/lock": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Locks the user for the specified time in milliseconds",
        "parameters": [
          {
            "name": "time",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "404": {
            "description": "User does not exist"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RatingType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Rating": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "sendAt": {
            "type": "string",
            "format": "date-time"
          },
          "ratingType": {
            "$ref": "#/components/schemas/RatingType"
          }
        },
        "additionalProperties": false
      },
      "Picture": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "uploadAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "mail": {
            "type": "string",
            "nullable": true
          },
          "ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rating"
            },
            "nullable": true
          },
          "pictures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Picture"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "sendAt": {
            "type": "string",
            "format": "date-time"
          },
          "seenAt": {
            "type": "string",
            "format": "date-time"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "sender": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "Chatroom": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "nullable": true
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "postedAt": {
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "picture": {
            "$ref": "#/components/schemas/Picture"
          }
        },
        "additionalProperties": false
      },
      "Chronicle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Post"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FriendList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Institution": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "mail": {
            "type": "string",
            "nullable": true
          },
          "ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rating"
            },
            "nullable": true
          },
          "pictures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Picture"
            },
            "nullable": true
          },
          "homepage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Login": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/LoginType"
          }
        },
        "additionalProperties": false
      },
      "Me": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/LoginType"
          },
          "subscripedUntil": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Person": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "mail": {
            "type": "string",
            "nullable": true
          },
          "ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rating"
            },
            "nullable": true
          },
          "pictures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Picture"
            },
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "sex": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PetSpecies": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Pet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "species": {
            "$ref": "#/components/schemas/PetSpecies"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "preference": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "pictures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Picture"
            },
            "nullable": true
          },
          "owner": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "additionalProperties": false
      },
      "ReportType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "ReportStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Report": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "sendAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ReportType"
          },
          "status": {
            "$ref": "#/components/schemas/ReportStatus"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Session": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "validUntil": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      }
    }
  }
}